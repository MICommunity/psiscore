#########################################################
# DO NOT CHANGE THE NAMES OF ANY OF THE PREDEFINED VARIABLES AS OTHERWISE      #
# THE PSISCORE IMPLEMENTATION WILL NOT BE WORKING ANYMORE. YOU CAN CHANGE THE  #
# VALUES (RIGHT OF THE =) OR ADD NEW PROPERTIES, HOWEVER.                      #
################################################################################

# the calculators that are being used by the server. each calcualtor has to be a valid classpath  with the complete package structure.
# seperate multiple calculators via a semi-colon, e.g. for two calculators
scoreCalculatorClasses=org.hupo.psi.mi.psiscore.ws.MitabScoreCalculator;

# path (as url) to the mitab file that contains the confidence values. if it is a file on the local harddrive, use a path like "file:///c:/9606.mitab.05182010.txt" (without the "")
# network paths can be used directly, i.e. ftp://ftp.ebi.ac.uk/pub/databases/intact/current/psimitab/pmid/2009/10397763.txt
org.hupo.psi.mi.psiscore.ws.MitabScoreCalculator.mitab=ftp://mint.bio.uniroma2.it/pub/release/mitab26/current/2010-07-27-mint-human-binary.mitab26.txt
#org.hupo.psi.mi.psiscore.ws.MitabScoreCalculator.mitab=file:///D:/2010-07-27-mint-human-binary.mitab26.txt

org.hupo.psi.mi.psiscore.ws.MINTScoreCalculator.zippedInput=false

#s this is the directory where all the user input and the reports of the scoring will be stored 
tempDir=D:/temp/

# if the content of the temporary directory exceeds this size (in megabyte) then the oldest jobs will be deleted to free some space again 
maxTempDirSize=100

# if the temporary directory contains more than this many jobs then the oldest files will be deleted to  free some space again
maxTempDirJobs=1000

# once the upper limits above (file number or file size) have been reached, this is how many files should be deleted to free some space again.
# 0.5 means that 50% of the files in the directory will be deleted, 0.8 that 80% will be removed etc.
# tthe deletion will be done in FIFO order, the oldest files will be deleted first.
deletePercentage=0.5

# how many scoring threads can run on the server in parallel (for now it is recommended to leave this value to 1 as synchronization issues could arise otherwise 
threadPoolSize=5

# standard polling interval in seconds. how many seconds should clients wait before asking the server again if a job has been finished
pollingInterval=5

# if the server has this many jobs still marked as running, it checks each of the running obs to see if they have already finished. if so, they will be marked as finished and several 
# data strucutres can be removed from the server cache. this value only determines how often the server ries to clean up
numberOfRunningJobsBeforeCleanup=50

# the maximum number of scoring jobs that a server can accept as running. if jobs are submitted to a scoring server very rapidly after the other (e.g. scripting
# access that uploads hundreds of files) then it might happen that the server can not handle the jobs fast enough. if more than this number of jobs are
# marked as running, the server will throw an exception 
maxRunningJobs=200

# milliseconds that the server will take a break once the number of active running jobs exeeds numberOfRunningJobsBeforeCleanup. If that many jobs are marked as running
# this is an incidence that the server received scoring jobs faster than it can handle them. by taking a break for this timespan, the server gives the 
# scoring jobs the opportunity to finish, therby lowering the number of active jobs
serverBreakIfOverloaded=2000

# parameter only neede for MPI implementation. if set to true, will overwrite properties with valuies
# retrieved from a database
overwriteProperties=true

# populated from the Maven build script, do not change
psiscore.groupId=${pom.groupId}
psiscore.artifactId=${pom.artifactId}
psiscore.version=${pom.version}